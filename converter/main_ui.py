# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'converter/converter_ui.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(904, 520)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/icons/lid-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_2.sizePolicy().hasHeightForWidth())
        self.groupBox_2.setSizePolicy(sizePolicy)
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout.setObjectName("gridLayout")
        self.comboBox_output_format = QtWidgets.QComboBox(self.groupBox_2)
        self.comboBox_output_format.setObjectName("comboBox_output_format")
        self.comboBox_output_format.addItem("")
        self.comboBox_output_format.addItem("")
        self.gridLayout.addWidget(self.comboBox_output_format, 2, 1, 1, 2)
        self.label_2 = QtWidgets.QLabel(self.groupBox_2)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 2, 0, 1, 1)
        self.comboBox_output_type = QtWidgets.QComboBox(self.groupBox_2)
        self.comboBox_output_type.setMinimumSize(QtCore.QSize(200, 0))
        self.comboBox_output_type.setObjectName("comboBox_output_type")
        self.comboBox_output_type.addItem("")
        self.comboBox_output_type.addItem("")
        self.comboBox_output_type.addItem("")
        self.gridLayout.addWidget(self.comboBox_output_type, 0, 1, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.groupBox_2)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 0, 0, 1, 1)
        self.pushButton_output_options = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_output_options.setObjectName("pushButton_output_options")
        self.gridLayout.addWidget(self.pushButton_output_options, 0, 2, 1, 1)
        self.comboBox_tilt_tables = QtWidgets.QComboBox(self.groupBox_2)
        self.comboBox_tilt_tables.setEnabled(False)
        self.comboBox_tilt_tables.setObjectName("comboBox_tilt_tables")
        self.gridLayout.addWidget(self.comboBox_tilt_tables, 1, 1, 1, 2)
        self.label = QtWidgets.QLabel(self.groupBox_2)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 1, 0, 1, 1)
        self.gridLayout_3.addWidget(self.groupBox_2, 1, 0, 1, 1)
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
        self.groupBox.setSizePolicy(sizePolicy)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.radioButtonOutputSame = QtWidgets.QRadioButton(self.groupBox)
        self.radioButtonOutputSame.setChecked(True)
        self.radioButtonOutputSame.setObjectName("radioButtonOutputSame")
        self.buttonGroup = QtWidgets.QButtonGroup(MainWindow)
        self.buttonGroup.setObjectName("buttonGroup")
        self.buttonGroup.addButton(self.radioButtonOutputSame)
        self.gridLayout_2.addWidget(self.radioButtonOutputSame, 0, 0, 1, 3)
        self.radioButtonOutputDirectory = QtWidgets.QRadioButton(self.groupBox)
        self.radioButtonOutputDirectory.setObjectName("radioButtonOutputDirectory")
        self.buttonGroup.addButton(self.radioButtonOutputDirectory)
        self.gridLayout_2.addWidget(self.radioButtonOutputDirectory, 1, 0, 1, 1)
        self.lineEditOutputFolder = QtWidgets.QLineEdit(self.groupBox)
        self.lineEditOutputFolder.setEnabled(False)
        self.lineEditOutputFolder.setReadOnly(True)
        self.lineEditOutputFolder.setObjectName("lineEditOutputFolder")
        self.gridLayout_2.addWidget(self.lineEditOutputFolder, 1, 1, 1, 1)
        self.pushButton_browse = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_browse.setEnabled(False)
        self.pushButton_browse.setMaximumSize(QtCore.QSize(25, 16777215))
        self.pushButton_browse.setObjectName("pushButton_browse")
        self.gridLayout_2.addWidget(self.pushButton_browse, 1, 2, 1, 1)
        self.gridLayout_3.addWidget(self.groupBox, 1, 1, 1, 1)
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setMidLineWidth(0)
        self.tableWidget.setAlternatingRowColors(True)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        self.tableWidget.horizontalHeader().setVisible(True)
        self.tableWidget.horizontalHeader().setHighlightSections(False)
        self.tableWidget.verticalHeader().setVisible(False)
        self.tableWidget.verticalHeader().setHighlightSections(False)
        self.gridLayout_3.addWidget(self.tableWidget, 0, 0, 1, 2)
        self.line_3 = QtWidgets.QFrame(self.centralwidget)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.gridLayout_3.addWidget(self.line_3, 2, 0, 1, 2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 904, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuConvert = QtWidgets.QMenu(self.menubar)
        self.menuConvert.setObjectName("menuConvert")
        self.menuHelop = QtWidgets.QMenu(self.menubar)
        self.menuHelop.setObjectName("menuHelop")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setIconSize(QtCore.QSize(36, 36))
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionAdd = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-Add File-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAdd.setIcon(icon1)
        self.actionAdd.setObjectName("actionAdd")
        self.actionDelete = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-Delete File.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon2.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-Add File-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionDelete.setIcon(icon2)
        self.actionDelete.setObjectName("actionDelete")
        self.actionConvert = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-Circled Play.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionConvert.setIcon(icon3)
        self.actionConvert.setObjectName("actionConvert")
        self.actionAdd_File_s = QtWidgets.QAction(MainWindow)
        self.actionAdd_File_s.setObjectName("actionAdd_File_s")
        self.actionAdd_Folder = QtWidgets.QAction(MainWindow)
        self.actionAdd_Folder.setObjectName("actionAdd_Folder")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionConvert_Files = QtWidgets.QAction(MainWindow)
        self.actionConvert_Files.setObjectName("actionConvert_Files")
        self.actionOpen_Output_Foler = QtWidgets.QAction(MainWindow)
        self.actionOpen_Output_Foler.setEnabled(False)
        self.actionOpen_Output_Foler.setObjectName("actionOpen_Output_Foler")
        self.actionOutput_types = QtWidgets.QAction(MainWindow)
        self.actionOutput_types.setObjectName("actionOutput_types")
        self.actionOutput_formats = QtWidgets.QAction(MainWindow)
        self.actionOutput_formats.setObjectName("actionOutput_formats")
        self.actionTips = QtWidgets.QAction(MainWindow)
        self.actionTips.setObjectName("actionTips")
        self.actionCheck_for_update = QtWidgets.QAction(MainWindow)
        self.actionCheck_for_update.setEnabled(False)
        self.actionCheck_for_update.setObjectName("actionCheck_for_update")
        self.actionVisit_Lowell_Instruments_Website = QtWidgets.QAction(MainWindow)
        self.actionVisit_Lowell_Instruments_Website.setObjectName("actionVisit_Lowell_Instruments_Website")
        self.actionReport_a_bug = QtWidgets.QAction(MainWindow)
        self.actionReport_a_bug.setEnabled(False)
        self.actionReport_a_bug.setObjectName("actionReport_a_bug")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionClearList = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/icons/icons8-delete-document-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionClearList.setIcon(icon4)
        self.actionClearList.setObjectName("actionClearList")
        self.menuFile.addAction(self.actionAdd_File_s)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuConvert.addAction(self.actionConvert_Files)
        self.menuConvert.addSeparator()
        self.menuConvert.addAction(self.actionOpen_Output_Foler)
        self.menuHelop.addAction(self.actionOutput_types)
        self.menuHelop.addAction(self.actionOutput_formats)
        self.menuHelop.addAction(self.actionTips)
        self.menuHelop.addSeparator()
        self.menuHelop.addAction(self.actionCheck_for_update)
        self.menuHelop.addAction(self.actionVisit_Lowell_Instruments_Website)
        self.menuHelop.addAction(self.actionReport_a_bug)
        self.menuHelop.addSeparator()
        self.menuHelop.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuConvert.menuAction())
        self.menubar.addAction(self.menuHelop.menuAction())
        self.toolBar.addAction(self.actionAdd)
        self.toolBar.addAction(self.actionDelete)
        self.toolBar.addAction(self.actionClearList)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionConvert)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.comboBox_output_type, self.pushButton_output_options)
        MainWindow.setTabOrder(self.pushButton_output_options, self.comboBox_tilt_tables)
        MainWindow.setTabOrder(self.comboBox_tilt_tables, self.comboBox_output_format)
        MainWindow.setTabOrder(self.comboBox_output_format, self.radioButtonOutputSame)
        MainWindow.setTabOrder(self.radioButtonOutputSame, self.radioButtonOutputDirectory)
        MainWindow.setTabOrder(self.radioButtonOutputDirectory, self.lineEditOutputFolder)
        MainWindow.setTabOrder(self.lineEditOutputFolder, self.pushButton_browse)
        MainWindow.setTabOrder(self.pushButton_browse, self.tableWidget)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Lowell Instruments - File Converter"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Output"))
        self.comboBox_output_format.setItemText(0, _translate("MainWindow", "Comma Separated Value (.csv) - (slow)"))
        self.comboBox_output_format.setItemText(1, _translate("MainWindow", "Hierarchical Data Format 5 (.hdf5)"))
        self.label_2.setText(_translate("MainWindow", "Output format:"))
        self.comboBox_output_type.setItemText(0, _translate("MainWindow", "Discrete Channels"))
        self.comboBox_output_type.setItemText(1, _translate("MainWindow", "Current"))
        self.comboBox_output_type.setItemText(2, _translate("MainWindow", "Compass Heading"))
        self.label_3.setText(_translate("MainWindow", "Output type:"))
        self.pushButton_output_options.setText(_translate("MainWindow", "Options..."))
        self.label.setText(_translate("MainWindow", "Meter Model:"))
        self.groupBox.setTitle(_translate("MainWindow", "Output Path"))
        self.radioButtonOutputSame.setText(_translate("MainWindow", "Save output to same directory as source files"))
        self.radioButtonOutputDirectory.setText(_translate("MainWindow", "Save output to:"))
        self.pushButton_browse.setText(_translate("MainWindow", "..."))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Files to Convert"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Containing Folder"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Size"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Start Time"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Stop Time"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuConvert.setTitle(_translate("MainWindow", "Convert"))
        self.menuHelop.setTitle(_translate("MainWindow", "Help"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionAdd.setText(_translate("MainWindow", "Add"))
        self.actionAdd.setToolTip(_translate("MainWindow", "Add a file for conversion"))
        self.actionDelete.setText(_translate("MainWindow", "Delete"))
        self.actionDelete.setToolTip(_translate("MainWindow", "Delete a file from the list"))
        self.actionConvert.setText(_translate("MainWindow", "Convert"))
        self.actionAdd_File_s.setText(_translate("MainWindow", "Add File(s)..."))
        self.actionAdd_Folder.setText(_translate("MainWindow", "Add Folder..."))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionConvert_Files.setText(_translate("MainWindow", "Convert Files"))
        self.actionOpen_Output_Foler.setText(_translate("MainWindow", "Open Output Foler"))
        self.actionOutput_types.setText(_translate("MainWindow", "Output types"))
        self.actionOutput_formats.setText(_translate("MainWindow", "Output formats"))
        self.actionTips.setText(_translate("MainWindow", "Tips"))
        self.actionCheck_for_update.setText(_translate("MainWindow", "Check for update"))
        self.actionVisit_Lowell_Instruments_Website.setText(_translate("MainWindow", "Visit Lowell Instruments Website"))
        self.actionReport_a_bug.setText(_translate("MainWindow", "Report a bug"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionClearList.setText(_translate("MainWindow", "Clear List"))
        self.actionClearList.setToolTip(_translate("MainWindow", "Clear all files from list"))

from . import icons_rc
